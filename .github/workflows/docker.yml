name: Docker

on:
  issue_comment:
    types: [created]  # 监听 issue 评论创建事件

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  USER_NAME: zlmediakitpro
  REPO: zlmediakit-private
  RELEASE: ON
  BRANCH: ${{ github.event.comment.body }}

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: 打印issue number
        run: |
          echo "issue number :${{ github.event.issue.number }}"

      - name: 过滤issue id
        if: github.event.issue.number != 1
        run: exit 1

      - name: 分支白名单
        run: |
          WHITELIST=("feature/transcode" "feature/1078" "feature/all" "feature/ts" "feature/codecs")
          # 判断提交消息是否在白名单中
          if [[ " ${WHITELIST[@]} " =~ " ${{ env.BRANCH }} " ]]; then
            echo "分支白名单匹配成功: ${{ env.BRANCH }}"
          else
            echo "分支白名单匹配失败: ${{ env.BRANCH }}, 中断编译!"
            exit 1
          fi

      - name: 下载源码
        uses: actions/checkout@v2
        with:
          repository: xia-chu/zlmediakit-promax
          fetch-depth: 1
          ref: ${{ env.BRANCH }}
          token: ${{ secrets.ACCESS_TOKEN }}
          path: .

      - name: 下载submodule源码
        run: mv -f .gitmodules_github .gitmodules && git submodule sync && git submodule update --init

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USER_NAME }}
          password: ${{ secrets.DOCKER_IO_SECRET }}

      - name: 设置环境变量
        run: |
          echo "TAG=$(echo ${{ env.BRANCH }} | tr -s "/\?%*:|\"<>" "_")" >> $GITHUB_ENV  

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: github.event_name != 'pull_request' && github.ref != 'refs/heads/feature/test'
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.USER_NAME }}/${{ env.REPO }}:${{ env.TAG }}
          file: ./dockerfile
          build-args: |
            MODEL=Release
            RELEASE_VERSION=${{ env.RELEASE }}
          platforms: linux/amd64,linux/arm64
