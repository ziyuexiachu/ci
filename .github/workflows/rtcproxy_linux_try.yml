name: RtcProxyLinuxTry

on:
  issue_comment:
    types: [created]  # 监听 issue 评论创建事件

env:
  RELEASE: OFF

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: 打印issue评论信息
        run: |
          echo "issue number :${{ github.event.issue.number }}"
          echo "issue 作者 :${{ github.event.comment.user.login }}"

      - name: 过滤issue评论
        if: github.event.issue.number != 1 || github.event.comment.user.login != 'ziyuexiachu'
        run: exit 1

      - name: 获取分支和ci名
        run: |
          #!/bin/bash
          set -x
          input_string="${{ github.event.comment.body }}"
          
          # Split into lines and trim each line
          IFS=' ' read -r -a lines <<< "$input_string"
          
          for (( i=0; i<${#lines[@]}; i++ )); do
            trimmed_line=$(echo "${lines[i]}" | sed -e 's/^[ \t]*//' -e 's/[ \t]*$//')
            lines[i]="$trimmed_line"
          done
          
          for (( i=0; i<${#lines[@]}; i++ )); do
            if [ "$i" -eq 0 ]; then
              echo "分支: ${lines[i]}"
              echo "BRANCH=${lines[i]}" >> $GITHUB_ENV
            elif [ "$i" -eq 1 ]; then
              echo "ci名: ${lines[i]}"
              if [ "${lines[i]}" != "${{ github.workflow }}" ]; then
                echo "ci不匹配"
                exit 1
              fi
            fi
          done

      - name: 下载源码
        uses: actions/checkout@v2
        with:
          repository: xia-chu/RTCProxy
          fetch-depth: 1
          ref: ${{ env.BRANCH }}
          token: ${{ secrets.ACCESS_TOKEN }}
          path: .

      - name: 获取git hash
        run: |
          echo "HASH=$(git log -1 --format='%H')" >> $GITHUB_ENV

      - name: 查询是否是试用版本
        run: |
          if grep -q "RELEASE_VERSION" CMakeLists.txt; then
            echo "存在试用版本开关"
          else
            echo "试用版本开关不存在, 中断编译!"
            exit 1
          fi

      - name: 下载submodule源码
        run: mv -f .gitmodules_github .gitmodules && git submodule sync && git submodule update --init

      - name: 启动 Docker 容器, 在Docker 容器中执行脚本
        run: |
          docker pull centos:7 
          docker run -e RELEASE=${{ env.RELEASE }} -v $(pwd):/root -w /root --rm centos:7 sh -c "
            #!/bin/bash
            set -x
          
            # Backup original CentOS-Base.repo file
            cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
          
            # Define new repository configuration
            cat <<EOF > /etc/yum.repos.d/CentOS-Base.repo
          [base]
          name=CentOS-7 - Base - mirrors.aliyun.com
          baseurl=http://mirrors.aliyun.com/centos/7/os/x86_64/
          gpgcheck=1
          gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
          
          [updates]
          name=CentOS-7 - Updates - mirrors.aliyun.com
          baseurl=http://mirrors.aliyun.com/centos/7/updates/x86_64/
          gpgcheck=1
          gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
          EOF
          
            # Clean yum cache and recreate it
            yum clean all
            yum makecache
          
            echo \"CentOS 7 软件源已成功切换\"
          
            mkdir -p /root/install
          
            yum install -y -q git wget gcc gcc-c++ make
          
            wget -q https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-linux-x86_64.tar.gz
            tar -xzf cmake-3.26.4-linux-x86_64.tar.gz  > /dev/null 2>&1
            mv cmake-3.26.4-linux-x86_64 /usr/local/cmake-3.26.4
            ln -s /usr/local/cmake-3.26.4/bin/* /usr/local/bin/
          
            mkdir -p build
            cd build
            cmake .. \
            -DCMAKE_BUILD_TYPE=Release -DRELEASE_VERSION=${{ env.RELEASE }}
          
            make -j $(nproc)
          "

      - name: 设置环境变量
        run: |
          echo "TAG=$(echo ${{ env.BRANCH }} | tr -s "/\?%*:|\"<>" "_")" >> $GITHUB_ENV  
          echo "DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV

      - name: 打包二进制
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.workflow }}_${{ env.TAG }}_${{ env.DATE }}
          path: output/*
          if-no-files-found: error
          retention-days: 90

      - name: issue评论
        if: github.event_name != 'pull_request' && github.ref != 'refs/heads/feature/test'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.SELF_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: 2,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '- 下载地址: [${{ github.workflow }}_${{ env.TAG }}_${{ env.DATE }}](${{ steps.upload.outputs.artifact-url }})\n'
                + '- 分支: ${{ env.BRANCH }}\n' 
                + '- git hash: ${{ env.HASH }} \n' 
                + '- 编译日期: ${{ env.DATE }}\n' 
                + '- 编译记录: [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n'
                + '- 打包ci名: ${{ github.workflow }}\n'
                + '- 说明: 本二进制在centos7(x64)上编译，请确保您的机器系统不低于此版本\n' 
            })
